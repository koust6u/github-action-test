name: Notify Slack on Pull Request Review Request

on:
  pull_request_review:

env:
  koust6u: U07D1PWSLSG

 
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send notification to Slack
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Send Review Notification to Slack Thread
        uses: actions/github-script@v6
        id: find-slack-message
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

            const { data: comments } = await octokit.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            const slackMessage = comments.find(comment => comment.body.includes(context.payload.pull_request.html_url));
          return slackMessage ? slackMessage.id : null;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel-id: 'C07DN3TETSL'
          payload: |
            {
              "text": "Code review requested for Backend PR: ${{ github.event.pull_request.html_url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<@${{ env[format('{0}', env.GITHUB_UID)] }}>님 PR에 대한 리뷰가 도착했어요.📫\n  <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>"
                  }
                }
              ],
              "thread_ts": "${{ steps.find-slack-message.outputs.result }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          GITHUB_UID: ${{ github.event.pull_request.user.login }}
          
